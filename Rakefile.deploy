require 'dotenv'

Dotenv.load

SUDO = ENV['SUDO'] || ''
NOCACHE = ENV['NOCACHE'] || ''

DOCKER   = [SUDO, 'docker'].join(' ')
APP_NAME = 'ha4go'.freeze

ROLE_FRONT = 'front'
ROLE_JOB   = 'job'
ROLE_DB    = 'db'
ROLE_BASE  = 'base'

NAMES = {
  ROLE_BASE  => "#{APP_NAME}-#{ROLE_BASE}",
  ROLE_FRONT => "#{APP_NAME}-#{ROLE_FRONT}",
  ROLE_JOB   => "#{APP_NAME}-#{ROLE_FRONT}", # FRONTと同じ
  ROLE_DB    => "#{APP_NAME}-#{ROLE_DB}"
}.freeze
TAGS = {
  ROLE_BASE  => '1.0',
  ROLE_FRONT => '1.0',
  ROLE_JOB   => '1.0',
  ROLE_DB    => '1.0'
}.freeze
FILES = {
  ROLE_BASE  => "Dockerfile.#{ROLE_BASE}",
  ROLE_FRONT => "Dockerfile.#{ROLE_FRONT}",
  ROLE_JOB   => "Dockerfile.#{ROLE_FRONT}", # FRONTと同じ
  ROLE_DB    => "Dockerfile.#{ROLE_DB}"
}
RELEASE_TAG = "release".freeze

DOCKER_OPTIONS = {
  'PRODUCT' => {
    ROLE_BASE  => '',
    ROLE_FRONT => "-d -p 3000:3000 --env-file=.env --log-opt max-size=100m --log-opt max-file=3 -v `pwd`/public/uploads:/myapp/public/uploads",
    ROLE_JOB   => '-d --env-file=.env',
    ROLE_DB    => "-d -v `pwd`/mysql:/var/lib/mysql -p 3306:3306"
  },
  'DEBUG'   => {
    ROLE_FRONT => '-d -p 3000:3000 --env-file=.env',
    ROLE_JOB   => '',
    ROLE_DB    => "-d -v `pwd`/mysql:/var/lib/mysql -p 3306:3306"
  }
}

DOCKER_COMMAND = {
  'PRODUCT' => {
    ROLE_JOB   => 'bundle exec rake jobs:work'
  },
  'DEBUG'   => {
    ROLE_JOB   => 'bundle exec rake jobs:work'
  }
}

class Cmd
  def self.gen(values)
    values.join(' ')
  end
end

desc "build[base/db/front/job]"
task :build, [:role] do |_t, a|
  r = a[:role]
  sh Cmd.gen(
       [
         DOCKER,
         'build',
         NOCACHE,
         "-t #{NAMES[r]}:#{TAGS[r]}",
         "-f #{FILES[r]}",
         './'
       ]
     )
end

desc 'run[<role>,<base>,<`docker-machine ip default`>]'
task :run, [:role, :local, :docker_ip] do |_t, a|
  r = a[:role]
  e = a[:local] || 'DEBUG'
  sh Cmd.gen([
               DOCKER,
               "run --name ha4go-#{r.downcase}",
               "#{DOCKER_OPTIONS[e][r]}",
               "#{NAMES[r]}:#{TAGS[r]}",
               "#{DOCKER_COMMAND[e][r]}"
             ])
end

desc 'console[<role>,<base>,<`docker-machine ip default`>]'
task :console, [:role, :local, :docker_ip] do |_t, a|
  r = a[:role]
  e = a[:local] || 'DEBUG'
  sh Cmd.gen([
               DOCKER,
               "exec -it ha4go-#{r.downcase}",
               'bash'
             ])
end